package com.bit.web01;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketAddress;

//웹서버 만들어보기
//실행하면 오류남. 왜? 오라클 깔면서 8080 지정했기 때문
//오라클을 9090으로 변경함
//브라우저에서 http://localhost:8080/ 입력하면 접속 메시지 뜸
//접속 메시지 여러줄 뜨는 건, 아이콘, 이미지 등 여러 정보를 받기 때문
//하지만 브라우저에선 작동 안함. 
//	페이지가 작동하지 않습니다.
//	localhost에서 잘못된 응답을 전송했습니다.
//	ERR_INVALID_HTTP_RESPONSE
//왜? 약속된 방식으로 정보를 보내지 않았기 때문에. 헤더 등
//자바의 Window>show view>other>General>browser 보기 하면 바로 보임
//http://192.168.0.193:8080/

public class Server extends Thread{
	
	Socket sock;

	public Server(Socket sock) {
		this.sock=sock;
	}
	
	public void run() {
		InputStream is=null;
		InputStreamReader isr=null;
		BufferedReader br=null;
		OutputStream os=null;
		FileInputStream fis=null;
		File file=null;
		try {
			SocketAddress addr=sock.getRemoteSocketAddress();
//			System.out.println(addr.toString());///192.168.0.193:49802 찍힘
			is=sock.getInputStream();
			isr=new InputStreamReader(is);
			br=new BufferedReader(isr);
			String request=br.readLine();
//			System.out.println(request);
			//브라우저에 http://192.168.0.193:8080/hangle.txt 하면 콘솔에 GET /hangle.txt HTTP/1.1 찍힘
			String[] arr=request.split(" ");
			os=sock.getOutputStream();
			os.write("HTTP/1.1 200 OK\r\n".getBytes());//두 번 개행하니 아래를 본문으로 인식해서 한번 개행으로 바꿈
			os.write("Content-type: text/plain; charset=utf-8".getBytes());//인코딩 정보 보내기
			os.write("\r\n\r\n".getBytes());//본문과 헤더정보의 구분을 위해 한 번 더 들어감
			
//			file=new File("www/hangle.txt");// \\ 대신 \ 하나 써도 되는 것 같다. \\는 윈도우에서만 그런 것
			file=new File("www"+arr[1]);//동적 연동
			//한글은 깨짐.헤더 부분에서 나는 UTF-8로 보낸다고 신호줘야 함
			fis=new FileInputStream(file);
			int su=-1;
			while((su=fis.read())!=-1){
				os.write(su);
			}
			os.flush();
		} catch (IOException e) {
			e.printStackTrace();
		} finally{
			try {
				if(br!=null) br.close();
				if(isr!=null) isr.close();
				if(is!=null) is.close();
				if(fis!=null) fis.close();
				if(os!=null) os.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	public static void main(String[] args) {
		int port=8080;
		ServerSocket serv=null;
		try {
			serv=new ServerSocket(port);
			//정말 서버라면 계속 열어놔야 함
			while(true){
				Socket sock=serv.accept();
				Server thr=new Server(sock);
				thr.start();
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally{
			try {
				if(serv!=null) serv.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
}